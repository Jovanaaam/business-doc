/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;


import forms.cena.CenaDelete;
import forms.cena.CenaInsert;
import forms.cena.CenaUpdate;
import forms.cena.CenaView;
import forms.distincttipstopapdv.StopaPDVDelete;
import forms.distincttipstopapdv.StopaPDVInsert;
import forms.distincttipstopapdv.StopaPDVUpdate;
import forms.distincttipstopapdv.StopaPDVView;
import forms.faktura.FakturaDelete;
import forms.faktura.FakturaInsert;
import forms.faktura.FakturaUpdate;
import forms.faktura.FakturaView;
import forms.horizontalnoparticinoisanje.HorizontalnoParticionisanjeView;
import forms.proizvod.ProizvodDelete;
import forms.proizvod.ProizvodInsert;
import forms.proizvod.ProizvodUpdate;
import forms.proizvod.ProizvodView;
import forms.stavkafakture.StavkaFaktureDelete;
import forms.stavkafakture.StavkaFaktureInsert;
import forms.stavkafakture.StavkaFaktureUpdate;
import forms.stavkafakture.StavkaFaktureView;
import forms.stavkanarudzbenice.StavkaNarudzbeniceDelete;
import forms.stavkanarudzbenice.StavkaNarudzbeniceInsert;
import forms.stavkanarudzbenice.StavkaNarudzbeniceUpdate;
import forms.stavkanarudzbenice.StavkaNarudzbeniceView;
import forms.strukturiranitip.UslovPlacanjaInsert;
import forms.strukturiranitip.UslovPlacanjaView;
import forms.strukturiranitip.UsloviPlacanjaDelete;
import forms.strukturiranitip.UsloviPlacanjaUpdate;
import forms.vertikalnoparticionisanje.ZaposleniDelete;
import forms.vertikalnoparticionisanje.ZaposleniDetaljiView;
import forms.vertikalnoparticionisanje.ZaposleniInsertView;
import forms.vertikalnoparticionisanje.ZaposleniOsnovnoView;
import forms.vertikalnoparticionisanje.ZaposleniUpdateView;
import forms.vertikalnoparticionisanje.ZaposleniViewView;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author Korisnik
 */
public class FrmMain extends javax.swing.JFrame {
  
    /**
     * Creates new form FrmPocetna
     */
    public FrmMain() throws IOException {
        initComponents();

         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        menuProizvod = new javax.swing.JMenu();
        menuItemUnosProizvoda = new javax.swing.JMenuItem();
        menuItemIzmenaPrizvoda = new javax.swing.JMenuItem();
        menuItemPregledProizvoda = new javax.swing.JMenuItem();
        menuItemBrisanjeProizvoda = new javax.swing.JMenuItem();
        menuCena = new javax.swing.JMenu();
        menuItemUnosCene = new javax.swing.JMenuItem();
        menuItemIzmenaCene = new javax.swing.JMenuItem();
        menuItemPregledCena = new javax.swing.JMenuItem();
        menuItemBrisanjeCene = new javax.swing.JMenuItem();
        menuStavkaNarudzbenice = new javax.swing.JMenu();
        menuItemUnosStavkiNarudzbenice = new javax.swing.JMenuItem();
        menuItemIzmenaStavkeNarudzbenice = new javax.swing.JMenuItem();
        menuItemPregledStavkiNarudzbenice = new javax.swing.JMenuItem();
        menuItemBrisanjeStavkiNarudzbenice = new javax.swing.JMenuItem();
        menuFaktura = new javax.swing.JMenu();
        menuItemUnosFakture = new javax.swing.JMenuItem();
        menuItemIzmenaFakture = new javax.swing.JMenuItem();
        menuItemPregledFakture = new javax.swing.JMenuItem();
        menuItemBrisanjeFakture = new javax.swing.JMenuItem();
        menuStavkaFakture = new javax.swing.JMenu();
        menuItemUnosStavkeFakture = new javax.swing.JMenuItem();
        menuItemIzmenaStavkeFakture = new javax.swing.JMenuItem();
        menuItemPregledStavkiFakture = new javax.swing.JMenuItem();
        menuItemBrisanjeStavkefakture = new javax.swing.JMenuItem();
        menuHorizontalnoParticionisanje = new javax.swing.JMenu();
        menuItemCeneView = new javax.swing.JMenuItem();
        menuVertikalnoParticionisanje = new javax.swing.JMenu();
        menuItemZaposleniView = new javax.swing.JMenuItem();
        menuItemZaposleniDetaljiView = new javax.swing.JMenuItem();
        menuItemZaposleniOsnovnoView = new javax.swing.JMenuItem();
        menuItemZaposleniUnos = new javax.swing.JMenuItem();
        menuItemZaposleniIzmena = new javax.swing.JMenuItem();
        menuItemZaposleniBrisanje = new javax.swing.JMenuItem();
        DistinctTip = new javax.swing.JMenu();
        menuItemStopaUnos = new javax.swing.JMenuItem();
        menuItemStopaIzmena = new javax.swing.JMenuItem();
        menuItemStopaPregled = new javax.swing.JMenuItem();
        menuItemStopaBrisanje = new javax.swing.JMenuItem();
        menuStrukturirniTip = new javax.swing.JMenu();
        menuItemUsloviPlacanjaUnos = new javax.swing.JMenuItem();
        menuItemUsloviPlacanjaIzmena = new javax.swing.JMenuItem();
        menuItemUsloviPlacanjaPregled = new javax.swing.JMenuItem();
        menuItemUsloviPlacanjaBrisanje = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuProizvod.setText("Proizvod");

        menuItemUnosProizvoda.setText("Unos proizvoda");
        menuItemUnosProizvoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUnosProizvodaActionPerformed(evt);
            }
        });
        menuProizvod.add(menuItemUnosProizvoda);

        menuItemIzmenaPrizvoda.setText("Izmena proizvoda");
        menuItemIzmenaPrizvoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemIzmenaPrizvodaActionPerformed(evt);
            }
        });
        menuProizvod.add(menuItemIzmenaPrizvoda);

        menuItemPregledProizvoda.setText("Pregled proizvoda");
        menuItemPregledProizvoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemPregledProizvodaActionPerformed(evt);
            }
        });
        menuProizvod.add(menuItemPregledProizvoda);

        menuItemBrisanjeProizvoda.setText("Brisanje proizvoda");
        menuItemBrisanjeProizvoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemBrisanjeProizvodaActionPerformed(evt);
            }
        });
        menuProizvod.add(menuItemBrisanjeProizvoda);

        jMenuBar1.add(menuProizvod);

        menuCena.setText("Cena");

        menuItemUnosCene.setText("Unos cene");
        menuItemUnosCene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUnosCeneActionPerformed(evt);
            }
        });
        menuCena.add(menuItemUnosCene);

        menuItemIzmenaCene.setText("Izmena cene");
        menuItemIzmenaCene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemIzmenaCeneActionPerformed(evt);
            }
        });
        menuCena.add(menuItemIzmenaCene);

        menuItemPregledCena.setText("Pregled cena");
        menuItemPregledCena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemPregledCenaActionPerformed(evt);
            }
        });
        menuCena.add(menuItemPregledCena);

        menuItemBrisanjeCene.setText("Brisanje cene");
        menuItemBrisanjeCene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemBrisanjeCeneActionPerformed(evt);
            }
        });
        menuCena.add(menuItemBrisanjeCene);

        jMenuBar1.add(menuCena);

        menuStavkaNarudzbenice.setText("Stavka narudzbenice");

        menuItemUnosStavkiNarudzbenice.setText("Unos stavke narudzbenice");
        menuItemUnosStavkiNarudzbenice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUnosStavkiNarudzbeniceActionPerformed(evt);
            }
        });
        menuStavkaNarudzbenice.add(menuItemUnosStavkiNarudzbenice);

        menuItemIzmenaStavkeNarudzbenice.setText("Izmena stavke narudzbenice");
        menuItemIzmenaStavkeNarudzbenice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemIzmenaStavkeNarudzbeniceActionPerformed(evt);
            }
        });
        menuStavkaNarudzbenice.add(menuItemIzmenaStavkeNarudzbenice);

        menuItemPregledStavkiNarudzbenice.setText("Pregled stavki narudzbenice");
        menuItemPregledStavkiNarudzbenice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemPregledStavkiNarudzbeniceActionPerformed(evt);
            }
        });
        menuStavkaNarudzbenice.add(menuItemPregledStavkiNarudzbenice);

        menuItemBrisanjeStavkiNarudzbenice.setText("Brisanje stavki narudzbenice");
        menuItemBrisanjeStavkiNarudzbenice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemBrisanjeStavkiNarudzbeniceActionPerformed(evt);
            }
        });
        menuStavkaNarudzbenice.add(menuItemBrisanjeStavkiNarudzbenice);

        jMenuBar1.add(menuStavkaNarudzbenice);

        menuFaktura.setText("Faktura");

        menuItemUnosFakture.setText("Unos fakture");
        menuItemUnosFakture.setActionCommand("Unos fakture");
        menuItemUnosFakture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUnosFaktureActionPerformed(evt);
            }
        });
        menuFaktura.add(menuItemUnosFakture);

        menuItemIzmenaFakture.setText("Izmena fakture");
        menuItemIzmenaFakture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemIzmenaFaktureActionPerformed(evt);
            }
        });
        menuFaktura.add(menuItemIzmenaFakture);

        menuItemPregledFakture.setText("Pregled fakture");
        menuItemPregledFakture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemPregledFaktureActionPerformed(evt);
            }
        });
        menuFaktura.add(menuItemPregledFakture);

        menuItemBrisanjeFakture.setText("Brisanje fakture");
        menuItemBrisanjeFakture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemBrisanjeFaktureActionPerformed(evt);
            }
        });
        menuFaktura.add(menuItemBrisanjeFakture);

        jMenuBar1.add(menuFaktura);

        menuStavkaFakture.setText("Stavka fakture");

        menuItemUnosStavkeFakture.setText("Unos stavke fakture");
        menuItemUnosStavkeFakture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUnosStavkeFaktureActionPerformed(evt);
            }
        });
        menuStavkaFakture.add(menuItemUnosStavkeFakture);

        menuItemIzmenaStavkeFakture.setText("Izmena stavke fakture");
        menuItemIzmenaStavkeFakture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemIzmenaStavkeFaktureActionPerformed(evt);
            }
        });
        menuStavkaFakture.add(menuItemIzmenaStavkeFakture);

        menuItemPregledStavkiFakture.setText("Pregled stavki fakture");
        menuItemPregledStavkiFakture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemPregledStavkiFaktureActionPerformed(evt);
            }
        });
        menuStavkaFakture.add(menuItemPregledStavkiFakture);

        menuItemBrisanjeStavkefakture.setText("Brisanje stavke fakture");
        menuItemBrisanjeStavkefakture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemBrisanjeStavkefaktureActionPerformed(evt);
            }
        });
        menuStavkaFakture.add(menuItemBrisanjeStavkefakture);

        jMenuBar1.add(menuStavkaFakture);

        menuHorizontalnoParticionisanje.setText("Horizontalno particionisanje");

        menuItemCeneView.setText("Pregled cena");
        menuItemCeneView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCeneViewActionPerformed(evt);
            }
        });
        menuHorizontalnoParticionisanje.add(menuItemCeneView);

        jMenuBar1.add(menuHorizontalnoParticionisanje);

        menuVertikalnoParticionisanje.setText("Vertikalno particionisanje");

        menuItemZaposleniView.setText("Zaposleni View");
        menuItemZaposleniView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemZaposleniViewActionPerformed(evt);
            }
        });
        menuVertikalnoParticionisanje.add(menuItemZaposleniView);

        menuItemZaposleniDetaljiView.setText("Zaposleni Detalji View");
        menuItemZaposleniDetaljiView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemZaposleniDetaljiViewActionPerformed(evt);
            }
        });
        menuVertikalnoParticionisanje.add(menuItemZaposleniDetaljiView);

        menuItemZaposleniOsnovnoView.setText("Zaposleni Osnovno View");
        menuItemZaposleniOsnovnoView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemZaposleniOsnovnoViewActionPerformed(evt);
            }
        });
        menuVertikalnoParticionisanje.add(menuItemZaposleniOsnovnoView);

        menuItemZaposleniUnos.setText("Zaposleni Unos");
        menuItemZaposleniUnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemZaposleniUnosActionPerformed(evt);
            }
        });
        menuVertikalnoParticionisanje.add(menuItemZaposleniUnos);

        menuItemZaposleniIzmena.setText("Zaposleni Izmena");
        menuItemZaposleniIzmena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemZaposleniIzmenaActionPerformed(evt);
            }
        });
        menuVertikalnoParticionisanje.add(menuItemZaposleniIzmena);

        menuItemZaposleniBrisanje.setText("Zaposleni Brisanje");
        menuItemZaposleniBrisanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemZaposleniBrisanjeActionPerformed(evt);
            }
        });
        menuVertikalnoParticionisanje.add(menuItemZaposleniBrisanje);

        jMenuBar1.add(menuVertikalnoParticionisanje);

        DistinctTip.setText("Distinct tip");

        menuItemStopaUnos.setText("Stopa pdv unos");
        menuItemStopaUnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemStopaUnosActionPerformed(evt);
            }
        });
        DistinctTip.add(menuItemStopaUnos);

        menuItemStopaIzmena.setText("Stopa pdv izmena");
        menuItemStopaIzmena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemStopaIzmenaActionPerformed(evt);
            }
        });
        DistinctTip.add(menuItemStopaIzmena);

        menuItemStopaPregled.setText("Stopa pdv pregled");
        menuItemStopaPregled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemStopaPregledActionPerformed(evt);
            }
        });
        DistinctTip.add(menuItemStopaPregled);

        menuItemStopaBrisanje.setText("Stopa pdv brisanje");
        menuItemStopaBrisanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemStopaBrisanjeActionPerformed(evt);
            }
        });
        DistinctTip.add(menuItemStopaBrisanje);

        jMenuBar1.add(DistinctTip);

        menuStrukturirniTip.setText("Strukturirani tip");

        menuItemUsloviPlacanjaUnos.setText("Uslovi placanja unos");
        menuItemUsloviPlacanjaUnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUsloviPlacanjaUnosActionPerformed(evt);
            }
        });
        menuStrukturirniTip.add(menuItemUsloviPlacanjaUnos);

        menuItemUsloviPlacanjaIzmena.setText("Uslovi placanja izmena");
        menuItemUsloviPlacanjaIzmena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUsloviPlacanjaIzmenaActionPerformed(evt);
            }
        });
        menuStrukturirniTip.add(menuItemUsloviPlacanjaIzmena);

        menuItemUsloviPlacanjaPregled.setText("Uslovi placanja pregled");
        menuItemUsloviPlacanjaPregled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUsloviPlacanjaPregledActionPerformed(evt);
            }
        });
        menuStrukturirniTip.add(menuItemUsloviPlacanjaPregled);

        menuItemUsloviPlacanjaBrisanje.setText("Uslovi placanja brisanje");
        menuItemUsloviPlacanjaBrisanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUsloviPlacanjaBrisanjeActionPerformed(evt);
            }
        });
        menuStrukturirniTip.add(menuItemUsloviPlacanjaBrisanje);

        jMenuBar1.add(menuStrukturirniTip);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1074, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemUnosProizvodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUnosProizvodaActionPerformed
       try{
           ProizvodInsert pi = new ProizvodInsert();
                   
       pi.setVisible(true);
      // this.setVisible(false);
         }  catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemUnosProizvodaActionPerformed

    private void menuItemIzmenaPrizvodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemIzmenaPrizvodaActionPerformed
        try{
        ProizvodUpdate pu = new ProizvodUpdate();
        pu.setVisible(true);
         }  catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemIzmenaPrizvodaActionPerformed

    private void menuItemPregledProizvodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemPregledProizvodaActionPerformed
      try{
        ProizvodView pv = new ProizvodView();
       pv.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemPregledProizvodaActionPerformed

    private void menuItemBrisanjeProizvodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemBrisanjeProizvodaActionPerformed
             try{
                 ProizvodDelete pd = new ProizvodDelete();
       pd.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemBrisanjeProizvodaActionPerformed

    private void menuItemUnosCeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUnosCeneActionPerformed
             try{
                 CenaInsert ci = new CenaInsert();
       ci.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemUnosCeneActionPerformed

    private void menuItemIzmenaStavkeNarudzbeniceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemIzmenaStavkeNarudzbeniceActionPerformed
             try{
                 StavkaNarudzbeniceUpdate snu = new StavkaNarudzbeniceUpdate();
       snu.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemIzmenaStavkeNarudzbeniceActionPerformed

    private void menuItemUnosFaktureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUnosFaktureActionPerformed
              try{
                  FakturaInsert fi = new FakturaInsert();
       fi.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemUnosFaktureActionPerformed

    private void menuItemIzmenaCeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemIzmenaCeneActionPerformed
             try{
                 CenaUpdate cu = new CenaUpdate();
       cu.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemIzmenaCeneActionPerformed

    private void menuItemPregledCenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemPregledCenaActionPerformed
              try{
                  CenaView cv = new CenaView();
       cv.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemPregledCenaActionPerformed

    private void menuItemBrisanjeCeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemBrisanjeCeneActionPerformed
             try{
                 CenaDelete cd = new CenaDelete();
       cd.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemBrisanjeCeneActionPerformed

    private void menuItemUnosStavkiNarudzbeniceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUnosStavkiNarudzbeniceActionPerformed
              try{
                  StavkaNarudzbeniceInsert sni = new StavkaNarudzbeniceInsert();
       sni.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemUnosStavkiNarudzbeniceActionPerformed

    private void menuItemPregledStavkiNarudzbeniceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemPregledStavkiNarudzbeniceActionPerformed
             try{
                 StavkaNarudzbeniceView snv = new StavkaNarudzbeniceView();
                snv.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemPregledStavkiNarudzbeniceActionPerformed

    private void menuItemBrisanjeStavkiNarudzbeniceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemBrisanjeStavkiNarudzbeniceActionPerformed
              try{
                  StavkaNarudzbeniceDelete snd = new StavkaNarudzbeniceDelete();
       snd.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemBrisanjeStavkiNarudzbeniceActionPerformed

    private void menuItemIzmenaFaktureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemIzmenaFaktureActionPerformed
             try{
                 FakturaUpdate fu = new FakturaUpdate();
       fu.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemIzmenaFaktureActionPerformed

    private void menuItemPregledFaktureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemPregledFaktureActionPerformed
         try{
                 FakturaView fv = new FakturaView();
       fv.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemPregledFaktureActionPerformed

    private void menuItemBrisanjeFaktureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemBrisanjeFaktureActionPerformed
       try{
                 FakturaDelete fd = new FakturaDelete();
       fd.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemBrisanjeFaktureActionPerformed

    private void menuItemUnosStavkeFaktureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUnosStavkeFaktureActionPerformed
         try{
                 StavkaFaktureInsert sfi = new StavkaFaktureInsert();
       sfi.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemUnosStavkeFaktureActionPerformed

    private void menuItemIzmenaStavkeFaktureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemIzmenaStavkeFaktureActionPerformed
         try{
                 StavkaFaktureUpdate sfu = new StavkaFaktureUpdate();
       sfu.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemIzmenaStavkeFaktureActionPerformed

    private void menuItemPregledStavkiFaktureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemPregledStavkiFaktureActionPerformed
         try{
                 StavkaFaktureView sfv = new StavkaFaktureView();
       sfv.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemPregledStavkiFaktureActionPerformed

    private void menuItemBrisanjeStavkefaktureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemBrisanjeStavkefaktureActionPerformed
         try{
                 StavkaFaktureDelete sfd = new StavkaFaktureDelete();
       sfd.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemBrisanjeStavkefaktureActionPerformed

    private void menuItemCeneViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCeneViewActionPerformed
         try{
                 HorizontalnoParticionisanjeView hpv = new HorizontalnoParticionisanjeView();
       hpv.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemCeneViewActionPerformed

    private void menuItemZaposleniViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemZaposleniViewActionPerformed
         try{
                 ZaposleniViewView zvv = new ZaposleniViewView();
       zvv.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemZaposleniViewActionPerformed

    private void menuItemZaposleniDetaljiViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemZaposleniDetaljiViewActionPerformed
         try{
                 ZaposleniDetaljiView zdv = new ZaposleniDetaljiView();
       zdv.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemZaposleniDetaljiViewActionPerformed

    private void menuItemZaposleniOsnovnoViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemZaposleniOsnovnoViewActionPerformed
         try{
                 ZaposleniOsnovnoView zov = new ZaposleniOsnovnoView();
       zov.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemZaposleniOsnovnoViewActionPerformed

    private void menuItemZaposleniUnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemZaposleniUnosActionPerformed
         try{
                 ZaposleniInsertView ziv = new ZaposleniInsertView();
       ziv.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemZaposleniUnosActionPerformed

    private void menuItemZaposleniIzmenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemZaposleniIzmenaActionPerformed
        try{
                 ZaposleniUpdateView zuv = new ZaposleniUpdateView();
       zuv.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemZaposleniIzmenaActionPerformed

    private void menuItemZaposleniBrisanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemZaposleniBrisanjeActionPerformed
         try{
                 ZaposleniDelete  zd = new ZaposleniDelete();
       zd.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemZaposleniBrisanjeActionPerformed

    private void menuItemStopaUnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemStopaUnosActionPerformed
         try{
                 StopaPDVInsert si = new StopaPDVInsert();
       si.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemStopaUnosActionPerformed

    private void menuItemStopaIzmenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemStopaIzmenaActionPerformed
        try{
                 StopaPDVUpdate su = new StopaPDVUpdate();
       su.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemStopaIzmenaActionPerformed

    private void menuItemStopaPregledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemStopaPregledActionPerformed
        try{
                 StopaPDVView sv = new StopaPDVView();
       sv.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemStopaPregledActionPerformed

    private void menuItemStopaBrisanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemStopaBrisanjeActionPerformed
         try{
                 StopaPDVDelete sd = new StopaPDVDelete();
       sd.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemStopaBrisanjeActionPerformed

    private void menuItemUsloviPlacanjaUnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUsloviPlacanjaUnosActionPerformed
         try{
                 UslovPlacanjaInsert upi = new UslovPlacanjaInsert();
       upi.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemUsloviPlacanjaUnosActionPerformed

    private void menuItemUsloviPlacanjaIzmenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUsloviPlacanjaIzmenaActionPerformed
        try{
                 UsloviPlacanjaUpdate upu = new UsloviPlacanjaUpdate();
       upu.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemUsloviPlacanjaIzmenaActionPerformed

    private void menuItemUsloviPlacanjaPregledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUsloviPlacanjaPregledActionPerformed
         try{
                 UslovPlacanjaView upv = new UslovPlacanjaView();
       upv.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemUsloviPlacanjaPregledActionPerformed

    private void menuItemUsloviPlacanjaBrisanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUsloviPlacanjaBrisanjeActionPerformed
        try{
                 UsloviPlacanjaDelete upd = new UsloviPlacanjaDelete();
       upd.setVisible(true);
      } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemUsloviPlacanjaBrisanjeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmMain().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu DistinctTip;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu menuCena;
    private javax.swing.JMenu menuFaktura;
    private javax.swing.JMenu menuHorizontalnoParticionisanje;
    private javax.swing.JMenuItem menuItemBrisanjeCene;
    private javax.swing.JMenuItem menuItemBrisanjeFakture;
    private javax.swing.JMenuItem menuItemBrisanjeProizvoda;
    private javax.swing.JMenuItem menuItemBrisanjeStavkefakture;
    private javax.swing.JMenuItem menuItemBrisanjeStavkiNarudzbenice;
    private javax.swing.JMenuItem menuItemCeneView;
    private javax.swing.JMenuItem menuItemIzmenaCene;
    private javax.swing.JMenuItem menuItemIzmenaFakture;
    private javax.swing.JMenuItem menuItemIzmenaPrizvoda;
    private javax.swing.JMenuItem menuItemIzmenaStavkeFakture;
    private javax.swing.JMenuItem menuItemIzmenaStavkeNarudzbenice;
    private javax.swing.JMenuItem menuItemPregledCena;
    private javax.swing.JMenuItem menuItemPregledFakture;
    private javax.swing.JMenuItem menuItemPregledProizvoda;
    private javax.swing.JMenuItem menuItemPregledStavkiFakture;
    private javax.swing.JMenuItem menuItemPregledStavkiNarudzbenice;
    private javax.swing.JMenuItem menuItemStopaBrisanje;
    private javax.swing.JMenuItem menuItemStopaIzmena;
    private javax.swing.JMenuItem menuItemStopaPregled;
    private javax.swing.JMenuItem menuItemStopaUnos;
    private javax.swing.JMenuItem menuItemUnosCene;
    private javax.swing.JMenuItem menuItemUnosFakture;
    private javax.swing.JMenuItem menuItemUnosProizvoda;
    private javax.swing.JMenuItem menuItemUnosStavkeFakture;
    private javax.swing.JMenuItem menuItemUnosStavkiNarudzbenice;
    private javax.swing.JMenuItem menuItemUsloviPlacanjaBrisanje;
    private javax.swing.JMenuItem menuItemUsloviPlacanjaIzmena;
    private javax.swing.JMenuItem menuItemUsloviPlacanjaPregled;
    private javax.swing.JMenuItem menuItemUsloviPlacanjaUnos;
    private javax.swing.JMenuItem menuItemZaposleniBrisanje;
    private javax.swing.JMenuItem menuItemZaposleniDetaljiView;
    private javax.swing.JMenuItem menuItemZaposleniIzmena;
    private javax.swing.JMenuItem menuItemZaposleniOsnovnoView;
    private javax.swing.JMenuItem menuItemZaposleniUnos;
    private javax.swing.JMenuItem menuItemZaposleniView;
    private javax.swing.JMenu menuProizvod;
    private javax.swing.JMenu menuStavkaFakture;
    private javax.swing.JMenu menuStavkaNarudzbenice;
    private javax.swing.JMenu menuStrukturirniTip;
    private javax.swing.JMenu menuVertikalnoParticionisanje;
    // End of variables declaration//GEN-END:variables

 
}
